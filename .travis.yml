language: python
dist: xenial
cache: false
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
    - LANG=en_US.UTF-8
    - TWINE_USERNAME=__token__
before_install:
  - python --version
  - uname -a
  - lsb_release -a || true
  - |
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      [[ $TOXENV =~ py3 ]] && brew upgrade python
      [[ $TOXENV =~ py2 ]] && brew install python@2
      export PATH="/usr/local/opt/python/libexec/bin:${PATH}"
    fi
install:
  - python -mpip install --progress-bar=off twine tox-wheel -rci/requirements.txt
  - virtualenv --version
  - easy_install --version
  - pip --version
  - tox --version
script:
  - |
    (
    set -eux
    if [[ -n ${WHEEL_MANYLINUX1:-} ]]; then
      docker run --rm --user $UID -itv $(pwd):/code ionelmc/manylinux $WHEEL_MANYLINUX1
      tox --installpkg $WHEEL_PATH/*.whl -v
    else
      tox -v
    fi
    )
after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat
notifications:
  email:
    on_success: never
    on_failure: always

jobs:
  include:
    - stage: test
      script: scripts/tox_build.sh
      python: '3.8'
      env:
        - TOXENV=check
    - env:
        - TOXENV=docs
      python: '3.8'
    - env:
        - TOXENV=py36-cover,extension-coveralls,coveralls
      python: '3.6'
    - env:
        - TOXENV=py37-cover,extension-coveralls,coveralls
      python: '3.7'
    - env:
        - TOXENV=py38-cover,extension-coveralls,coveralls
      python: '3.8'
    - stage: deploy
      env:
        - TOXENV=py38-cover
      python: '3.8'
      script: scripts/tox_build.sh PyPI
      deploy:
        - provider: pypi
          username: "__token__"
          password: $PYPI_TOKEN
          on:
            tags: true
        - provider: releases
          api_key: $GITHUB_OAUTH_TOKEN
          cleanup: false
          on:
            tags: true
