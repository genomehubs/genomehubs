name: package-genomehubs

on:
  [push]
  # push:
  #   tags:
  #     - "*"

jobs:
  # package-ui:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: "16"
  #     - run: npm install -g pkg
  #     - run: ./package-ui.sh
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: ./dist/*

  # package-api:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: "16"
  #     - run: npm install -g pkg
  #     - run: ./package-api.sh
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: ./dist/*

  package-genomehubs-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        run: |
          ./pip_install_latest.sh manylinux2014_x86_64
      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*

  start-elasticsearch-service:
    runs-on: ubuntu-latest
    steps:
      # - name: Configure sysctl limits
      #   run: |
      #     sudo swapoff -a
      #     sudo sysctl -w vm.swappiness=1
      #     sudo sysctl -w fs.file-max=262144
      #     sudo sysctl -w vm.max_map_count=262144

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.10.2

  start-elasticsearch-service:
    runs-on: ubuntu-latest
    services:
      elasticsearch:
        image: elasticsearch/elasticsearch-oss:7.10.2
        ports:
          - 9200:9200

  test-elasticsearch-service:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for elasticsearch
        uses: nev7n/wait_for_response@v1.0.1
        with:
          url: 'http://localhost:${{job.services.elasticsearch.ports[9200]}}'
          responseCode: 200
          timeout: 2000
          interval: 500
      - name: Check health
        run: |
          curl -s "http://localhost:${{job.services.elasticsearch.ports[9200]}}/_cat/health"
      - name: List indices
        run: |
          curl -s "http://localhost:${{job.services.elasticsearch.ports[9200]}}/_cat/indices"

  # package-genomehubs-macos:
  #   runs-on: macos-11
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install dependencies
  #       run: |
  #         python3 -m pip install --upgrade pip
  #         pip install requests setuptools wheel twine
  #     - name: Build and publish
  #       run: |
  #         ./pip_install_latest.sh macosx_11_0_x86_64
  #         python3 setup.py sdist bdist_wheel --python-tag py3 --plat-name macosx_10_9_x86_64
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: ./dist/*.whl

  # upload-to-pypi:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - package-genomehubs-linux
  #     - package-genomehubs-macos
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/download-artifact@v2
  #       with:
  #         path: ./dist
  #     - run: |
  #         mv dist/artifact/* dist/
  #         rm -r dist/artifact
  #         rm -rf dist/genomehubs-ui*
  #         rm -rf dist/genomehubs-api*
  #     - name: Publish package to PyPI
  #       uses: pypa/gh-action-pypi-publish@v1.5.0
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
  #         repository_url: https://upload.pypi.org/legacy/

  # create-github-release:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - package-api
  #     - package-ui
  #     - upload-to-pypi
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         path: ./dist
  #     - run: |
  #         mv dist/artifact/* dist/
  #         rm -r dist/artifact
  #         rm dist/*.whl
  #         chmod 755 dist/genomehubs-*-macos
  #         chmod 755 dist/genomehubs-*-linux
  #     - name: create release
  #       uses: "marvinpinto/action-automatic-releases@v1.2.1"
  #       with:
  #         repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #         draft: false
  #         prerelease: false
  #         title: "v${{github.ref_name}}"
  #         files: |
  #           dist/*
